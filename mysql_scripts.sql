CREATE  DATABASE IF NOT EXISTS SQL_PRACTICE;
CREATE TABLE IF NOT EXISTS SQL_PRACTICE.USERS 
(
ID INTEGER NOT NULL UNIQUE PRIMARY KEY,
NAME VARCHAR(1000) NOT NULL,
EMAIL VARCHAR (200) NOT NULL
);
ALTER TABLE SQL_PRACTICE.USERS ADD COLUMN (STATE VARCHAR(100));
ALTER TABLE SQL_PRACTICE.USERS ADD COLUMN (CITY VARCHAR(100), COUNTRY VARCHAR(100));

ALTER TABLE SQL_PRACTICE.USERS ADD  CONSTRAINT CK_EMAIL_UQ UNIQUE(EMAIL);

ALTER TABLE SQL_PRACTICE.USERS MODIFY COLUMN NAME VARCHAR(50);

ALTER TABLE SQL_PRACTICE.USERS ADD COLUMN IS_ENABLED CHAR(1) DEFAULT 'N' NOT NULL
CONSTRAINT CK_IS_ENABLED CHECK(IS_ENABLED IN ('Y','N'));

CREATE TABLE IF NOT EXISTS SQL_PRACTICE.USER_ROLES(
USER_ID INTEGER NOT NULL,
ROLE VARCHAR(50) NOT NULL,
CONSTRAINT FK_USER_ID  FOREIGN KEY(USER_ID) REFERENCES SQL_PRACTICE.USERS(ID)

);
INSERT INTO SQL_PRACTICE.USERS (ID,NAME,EMAIL) VALUE (1,'ASHISH', 'ASHISHKVS@GMAIL.COM');

INSERT INTO SQL_PRACTICE.USERS (ID,NAME,EMAIL) VALUE (2,'ANUPAM', 'ANUPAM@GMAIL.COM');
INSERT INTO SQL_PRACTICE.USER_ROLES VALUE (1,'USER');
INSERT INTO SQL_PRACTICE.USER_ROLES VALUE (1,'VENDOR');

INSERT INTO SQL_PRACTICE.USER_ROLES VALUE (2,'USER');
INSERT INTO SQL_PRACTICE.USER_ROLES VALUE (2,'VENDOR');
COMMIT;
SELECT * FROM SQL_PRACTICE.USERS USR INNER JOIN  SQL_PRACTICE.USER_ROLES ROLE ON USR.ID = ROLE.USER_ID;
SELECT * FROM SQL_PRACTICE.USERS USR RIGHT JOIN  SQL_PRACTICE.USER_ROLES ROLE ON USR.ID =1;
SELECT * FROM SQL_PRACTICE.USERS USR LEFT JOIN  SQL_PRACTICE.USER_ROLES ROLE ON USR.ID =1;

-- BOTH WORK AS SAME-- 
SELECT * FROM SQL_PRACTICE.USERS USR INNER JOIN  SQL_PRACTICE.USER_ROLES ROLE ON USR.ID = ROLE.USER_ID WHERE USR.ID=1;

SELECT * FROM SQL_PRACTICE.USERS USR, SQL_PRACTICE.USER_ROLES ROLE WHERE USR.ID = ROLE.USER_ID AND USR.ID=1;


-- GORUP BY--
SELECT ROLE, COUNT(*) FROM SQL_PRACTICE.USER_ROLES ROLE GROUP BY ROLE.ROLE;

-- DROPPING TABLE
DROP TABLE SQL_PRACTICE.USERS;
SHOW DATABASES;
DESC SQL_PRACTICE.USERS;
